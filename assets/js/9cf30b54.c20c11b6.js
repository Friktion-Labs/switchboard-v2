"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5565],{5318:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,h=d["".concat(l,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(h,i(i({ref:t},u),{},{components:n})):a.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7257:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return p},default:function(){return y},frontMatter:function(){return u},metadata:function(){return d},toc:function(){return h}});var a=n(5773),r=n(808),o=(n(7378),n(5318)),i=["components"],s={toc:[{value:"<code>sbv2 json:add:aggregator</code>",id:"sbv2-jsonaddaggregator",level:2},{value:"<code>sbv2 json:add:crank SCHEMAFILE</code>",id:"sbv2-jsonaddcrank-schemafile",level:2},{value:"<code>sbv2 json:add:oracle SCHEMAFILE</code>",id:"sbv2-jsonaddoracle-schemafile",level:2},{value:"<code>sbv2 json:create:queue INPUTFILE OUTPUTFILE</code>",id:"sbv2-jsoncreatequeue-inputfile-outputfile",level:2}]};function l(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"create and manage an oracle queue from a json file"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-jsonaddaggregator"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 json:add:aggregator"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-jsonaddcrank-schemafile"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 json:add:crank SCHEMAFILE"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-jsonaddoracle-schemafile"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 json:add:oracle SCHEMAFILE"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-jsoncreatequeue-inputfile-outputfile"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 json:create:queue INPUTFILE OUTPUTFILE")))),(0,o.kt)("h2",{id:"sbv2-jsonaddaggregator"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 json:add:aggregator")),(0,o.kt)("p",null,"add an aggregator to a schema file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 json:add:aggregator\n\nOPTIONS\n  -a, --authority=authority            alternate keypair that is the authority for the oracle queue\n  -a, --schema=schema                  filesystem path for an oracle queue schema\n  -h, --help                           show CLI help\n\n  -k, --keypair=keypair                keypair that will pay for onchain transactions. defaults to new account authority\n                                       if no alternate authority provided\n\n  -s, --silent                         suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl                  alternate RPC url\n\n  -v, --verbose                        log everything\n\n  --aggregatorFile=aggregatorFile      filesystem path of job json definition file\n\n  --mainnetBeta                        WARNING: use mainnet-beta solana cluster\n\n  --programId=programId                alternative Switchboard program ID to interact with\n\n  --sourceAggregator=sourceAggregator  public key of an existing aggregator account to copy\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/json/add/aggregator.ts"},"src/commands/json/add/aggregator.ts"))),(0,o.kt)("h2",{id:"sbv2-jsonaddcrank-schemafile"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 json:add:crank SCHEMAFILE")),(0,o.kt)("p",null,"add a crank to a schema file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 json:add:crank SCHEMAFILE\n\nARGUMENTS\n  SCHEMAFILE  filesystem path for an oracle queue schema\n\nOPTIONS\n  -a, --authority=authority  alternate keypair that is the authority for the oracle queue\n  -h, --help                 show CLI help\n\n  -k, --keypair=keypair      keypair that will pay for onchain transactions. defaults to new account authority if no\n                             alternate authority provided\n\n  -n, --name=name            name of the crank for easier identification\n\n  -r, --maxRows=maxRows      maximum number of rows a crank can support\n\n  -s, --silent               suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl        alternate RPC url\n\n  -v, --verbose              log everything\n\n  --mainnetBeta              WARNING: use mainnet-beta solana cluster\n\n  --programId=programId      alternative Switchboard program ID to interact with\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/json/add/crank.ts"},"src/commands/json/add/crank.ts"))),(0,o.kt)("h2",{id:"sbv2-jsonaddoracle-schemafile"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 json:add:oracle SCHEMAFILE")),(0,o.kt)("p",null,"add an oracle to a schema file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 json:add:oracle SCHEMAFILE\n\nARGUMENTS\n  SCHEMAFILE  filesystem path for an oracle queue schema\n\nOPTIONS\n  -a, --authority=authority  alternate keypair that is the authority for the oracle queue\n  -h, --help                 show CLI help\n\n  -k, --keypair=keypair      keypair that will pay for onchain transactions. defaults to new account authority if no\n                             alternate authority provided\n\n  -n, --name=name            name of the crank for easier identification\n\n  -s, --silent               suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl        alternate RPC url\n\n  -v, --verbose              log everything\n\n  --mainnetBeta              WARNING: use mainnet-beta solana cluster\n\n  --programId=programId      alternative Switchboard program ID to interact with\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/json/add/oracle.ts"},"src/commands/json/add/oracle.ts"))),(0,o.kt)("h2",{id:"sbv2-jsoncreatequeue-inputfile-outputfile"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 json:create:queue INPUTFILE OUTPUTFILE")),(0,o.kt)("p",null,"create an oracle queue from a json file"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 json:create:queue INPUTFILE OUTPUTFILE\n\nARGUMENTS\n  INPUTFILE   filesystem path of queue definition json file\n  OUTPUTFILE  filesystem path of output file to quickly load the queue\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --authority=authority  alternate keypair that will be the authority for any created accounts\n\n  --force                overwrite output file\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 queue:create:json\n\nEXAMPLE\n  $ sbv2 json:create:queue examples/queue.json queue-1.json -k ../authority-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/json/create/queue.ts"},"src/commands/json/create/queue.ts"))))}l.isMDXComponent=!0;var c=["components"],u={sidebar_position:80,title:"sbv2 json"},p=void 0,d={unversionedId:"cli/json",id:"cli/json",title:"sbv2 json",description:"",source:"@site/api/cli/json.mdx",sourceDirName:"cli",slug:"/cli/json",permalink:"/api/cli/json",tags:[],version:"current",sidebarPosition:80,frontMatter:{sidebar_position:80,title:"sbv2 json"},sidebar:"tutorialSidebar",previous:{title:"sbv2 queue",permalink:"/api/cli/queue"},next:{title:"sbv2 update",permalink:"/api/cli/update"}},m={},h=[],f={toc:h};function y(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l,{mdxType:"Sbv2Json"}))}y.isMDXComponent=!0}}]);