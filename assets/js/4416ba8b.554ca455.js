"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[848],{5318:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return m}});var t=r(7378);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function l(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function c(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var u=t.createContext({}),i=function(e){var n=t.useContext(u),r=n;return e&&(r="function"==typeof e?e(n):l(l({},n),e)),r},s=function(e){var n=i(e.components);return t.createElement(u.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),d=i(r),m=a,f=d["".concat(u,".").concat(m)]||d[m]||p[m]||o;return r?t.createElement(f,l(l({ref:n},s),{},{components:r})):t.createElement(f,l({ref:n},s))}));function m(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var c={};for(var u in n)hasOwnProperty.call(n,u)&&(c[u]=n[u]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var i=2;i<o;i++)l[i]=r[i];return t.createElement.apply(null,l)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},517:function(e,n,r){r.d(n,{Z:function(){return a}});var t=r(7378);function a(e){var n=e.children,r=e.hidden,a=e.className;return t.createElement("div",{role:"tabpanel",hidden:r,className:a},n)}},637:function(e,n,r){r.d(n,{Z:function(){return s}});var t=r(5773),a=r(7378),o=r(6457),l=r(9036),c=r(8944),u="tabItem_WhCL";function i(e){var n,r,o,i=e.lazy,s=e.block,p=e.defaultValue,d=e.values,m=e.groupId,f=e.className,b=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=d?d:b.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),v=(0,l.lx)(y,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var h=null===p?p:null!=(n=null!=p?p:null==(r=b.find((function(e){return e.props.default})))?void 0:r.props.value)?n:null==(o=b[0])?void 0:o.props.value;if(null!==h&&!y.some((function(e){return e.value===h})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+h+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,l.UB)(),k=w.tabGroupChoices,g=w.setTabGroupChoices,O=(0,a.useState)(h),T=O[0],A=O[1],N=[],E=(0,l.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var x=k[m];null!=x&&x!==T&&y.some((function(e){return e.value===x}))&&A(x)}var C=function(e){var n=e.currentTarget,r=N.indexOf(n),t=y[r].value;t!==T&&(E(n),A(t),null!=m&&g(m,t))},j=function(e){var n,r=null;switch(e.key){case"ArrowRight":var t=N.indexOf(e.currentTarget)+1;r=N[t]||N[0];break;case"ArrowLeft":var a=N.indexOf(e.currentTarget)-1;r=N[a]||N[N.length-1]}null==(n=r)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,c.Z)("tabs",{"tabs--block":s},f)},y.map((function(e){var n=e.value,r=e.label,o=e.attributes;return a.createElement("li",(0,t.Z)({role:"tab",tabIndex:T===n?0:-1,"aria-selected":T===n,key:n,ref:function(e){return N.push(e)},onKeyDown:j,onFocus:C,onClick:C},o,{className:(0,c.Z)("tabs__item",u,null==o?void 0:o.className,{"tabs__item--active":T===n})}),null!=r?r:n)}))),i?(0,a.cloneElement)(b.filter((function(e){return e.props.value===T}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},b.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==T})}))))}function s(e){var n=(0,o.Z)();return a.createElement(i,(0,t.Z)({key:String(n)},e))}},7163:function(e,n,r){r.r(n),r.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return b},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return m}});var t=r(5773),a=r(808),o=(r(7378),r(5318)),l=r(637),c=r(517),u=["components"],i={sidebar_position:20,title:"Oracles"},s=void 0,p={unversionedId:"developers/oracle",id:"developers/oracle",title:"Oracles",description:"Create",source:"@site/docs/developers/oracle.mdx",sourceDirName:"developers",slug:"/developers/oracle",permalink:"/developers/oracle",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"Oracles"},sidebar:"tutorialSidebar",previous:{title:"Oracle Queue",permalink:"/developers/queue"},next:{title:"Data Feeds",permalink:"/developers/feed"}},d={},m=[{value:"Create",id:"create",level:2},{value:"Oracle Deposit",id:"oracle-deposit",level:2},{value:"Oracle Withdraw",id:"oracle-withdraw",level:2}],f={toc:m};function b(e){var n=e.components,r=(0,a.Z)(e,u);return(0,o.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"create"},"Create"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oracleInit"))),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(c.Z,{value:"Typescript",label:"Typescript",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import * as anchor from "@project-serum/anchor";\nimport { Keypair } from "@solana/web3.js";\nimport {\n  loadSwitchboardProgram,\n  OracleAccount,\n  OracleQueueAccount,\n} from "@switchboard-xyz/switchboard-v2";\n\nlet payer: Keypair;\nconst program = await loadSwitchboardProgram("devnet", undefined, payer);\n\nconst queueAccount = new OracleQueueAccount({\n  program,\n  publicKey: queuePubkey,\n});\n\n// Create oracle\nconst oracleAccount = await OracleAccount.create(program, {\n  name: Buffer.from("My Oracle"),\n  queueAccount,\n});\n'))),(0,o.kt)(c.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sbv2 oracle create QUEUEKEY \\\n    --name "My Oracle" \\\n    --keypair "path/to/payer/keypair.json" \\\n    --authority "path/to/authority/keypair.json"  \\\n    --enable \\\n    --verbose\n')))),(0,o.kt)("h2",{id:"oracle-deposit"},"Oracle Deposit"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"tokenTransfer"))),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(c.Z,{value:"Typescript",label:"Typescript",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import * as anchor from "@project-serum/anchor";\nimport { Keypair } from "@solana/web3.js";\nimport {\n  loadSwitchboardProgram,\n  OracleAccount,\n  OracleQueueAccount,\n} from "@switchboard-xyz/switchboard-v2";\n\nlet payer: Keypair;\nlet amount = new anchor.BN(1_000_000_000);\nconst program = await loadSwitchboardProgram("devnet", undefined, payer);\n\nconst oracleAccount = new OracleAccount({ program, publicKey: oracleKey });\nconst oracle = await oracleAccount.loadData();\n\nconst queueAccount = new OracleQueueAccount({\n  program,\n  publicKey: oracle.queuePubkey,\n});\nconst mint = await queueAccount.loadMint();\nconst funderTokenAccount = (\n  await mint.getOrCreateAssociatedAccountInfo(payer.publicKey)\n).address;\n\nconst signature = await mint.transfer(\n  funderTokenAccount,\n  oracle.tokenAccount,\n  payer,\n  [],\n  amount.toNumber()\n);\n'))),(0,o.kt)(c.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sbv2 oracle deposit ORACLEKEY \\\n   --keypair "path/to/payer/keypair.json" \\\n   --amount 1.25\n')))),(0,o.kt)("h2",{id:"oracle-withdraw"},"Oracle Withdraw"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"oracleWithdraw"))),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(c.Z,{value:"Typescript",label:"Typescript",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},'import * as anchor from "@project-serum/anchor";\nimport { Keypair } from "@solana/web3.js";\nimport {\n  loadSwitchboardProgram,\n  OracleAccount,\n  OracleQueueAccount,\n} from "@switchboard-xyz/switchboard-v2";\n\nlet payer: Keypair;\nlet amount = new anchor.BN(1_000_000_000);\nconst program = await loadSwitchboardProgram("devnet", undefined, payer);\n\nconst oracleAccount = new OracleAccount({ program, publicKey: oracleKey });\nconst oracle = await oracleAccount.loadData();\n\nconst queueAccount = new OracleQueueAccount({\n  program,\n  publicKey: oracle.queuePubkey,\n});\nconst mint = await queueAccount.loadMint();\nconst withdrawAccount = (\n  await mint.getOrCreateAssociatedAccountInfo(payer.publicKey)\n).address;\n\nconst signature = await oracleAccount.withdraw({\n  amount,\n  oracleAuthority: payer,\n  withdrawAccount,\n});\n'))),(0,o.kt)(c.Z,{value:"CLI",label:"CLI",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'sbv2 oracle withdraw ORACLEKEY \\\n    --keypair "path/to/payer/keypair.json" \\\n    --amount 1.25\n')))))}b.isMDXComponent=!0}}]);