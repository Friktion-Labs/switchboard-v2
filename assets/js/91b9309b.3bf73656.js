"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7895],{5318:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return v}});var n=a(7378);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),v=r,g=d["".concat(s,".").concat(v)]||d[v]||p[v]||o;return a?n.createElement(g,l(l({ref:t},c),{},{components:a})):n.createElement(g,l({ref:t},c))}));function v(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5484:function(e,t,a){a.r(t),a.d(t,{assets:function(){return v},contentTitle:function(){return p},default:function(){return f},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return g}});var n=a(5773),r=a(808),o=(a(7378),a(5318)),l=["components"],i={toc:[{value:"<code>sbv2 lease create [AGGREGATORKEY]</code>",id:"sbv2-lease-create-aggregatorkey",level:2},{value:"<code>sbv2 lease extend [AGGREGATORKEY]</code>",id:"sbv2-lease-extend-aggregatorkey",level:2},{value:"<code>sbv2 lease withdraw [AGGREGATORKEY]</code>",id:"sbv2-lease-withdraw-aggregatorkey",level:2}]};function s(e){var t=e.components,a=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},i,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"interact with a switchboard lease account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-lease-create-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 lease create [AGGREGATORKEY]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-lease-extend-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 lease extend [AGGREGATORKEY]"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-lease-withdraw-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 lease withdraw [AGGREGATORKEY]")))),(0,o.kt)("h2",{id:"sbv2-lease-create-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 lease create [AGGREGATORKEY]")),(0,o.kt)("p",null,"fund and re-enable an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 lease create [AGGREGATORKEY] [-v] [-s] [--mainnetBeta] [-u <value>] [--programId <value>] [-k <value>]\n    [--amount <value>]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --amount=<value>       token amount to load into the lease escrow. If decimals provided, amount will be normalized to\n                         raw tokenAmount\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  fund and re-enable an aggregator lease\n\nALIASES\n  $ sbv2 aggregator lease create\n\nEXAMPLES\n  $ sbv2 lease:create GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.5 --keypair ../payer-keypair.json\n")),(0,o.kt)("h2",{id:"sbv2-lease-extend-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 lease extend [AGGREGATORKEY]")),(0,o.kt)("p",null,"fund and re-enable an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 lease extend [AGGREGATORKEY] --amount <value> [-v] [-s] [--mainnetBeta] [-u <value>] [--programId\n    <value>] [-k <value>]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n\nFLAGS\n  -k, --keypair=<value>  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n  -s, --silent           suppress cli prompts\n  -u, --rpcUrl=<value>   alternate RPC url\n  -v, --verbose          log everything\n  --amount=<value>       (required) token amount to load into the lease escrow. If decimals provided, amount will be\n                         normalized to raw tokenAmount\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n  --programId=<value>    alternative Switchboard program ID to interact with\n\nDESCRIPTION\n  fund and re-enable an aggregator lease\n\nALIASES\n  $ sbv2 aggregator lease extend\n\nEXAMPLES\n  $ sbv2 aggregator:lease:extend GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\n")),(0,o.kt)("h2",{id:"sbv2-lease-withdraw-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 lease withdraw [AGGREGATORKEY]")),(0,o.kt)("p",null,"withdraw funds from an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 lease withdraw [AGGREGATORKEY] --amount <value> [-v] [-s] [--mainnetBeta] [-u <value>] [--programId\n    <value>] [-k <value>] [--withdrawAddress <value>] [-a <value>]\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n\nFLAGS\n  -a, --authority=<value>    keypair delegated as the authority for managing the oracle account\n  -k, --keypair=<value>      keypair that will pay for onchain transactions. defaults to new account authority if no\n                             alternate authority provided\n  -s, --silent               suppress cli prompts\n  -u, --rpcUrl=<value>       alternate RPC url\n  -v, --verbose              log everything\n  --amount=<value>           (required) token amount to withdraw from lease account. If decimals provided, amount will\n                             be normalized to raw tokenAmount\n  --mainnetBeta              WARNING: use mainnet-beta solana cluster\n  --programId=<value>        alternative Switchboard program ID to interact with\n  --withdrawAddress=<value>  tokenAccount to withdraw to. If not provided, payer associated token account will be used\n\nDESCRIPTION\n  withdraw funds from an aggregator lease\n\nALIASES\n  $ sbv2 aggregator lease withdraw\n\nEXAMPLES\n  $ sbv2 aggregator:lease:withdraw GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair ../payer-keypair.json\n")))}s.isMDXComponent=!0;var u=["components"],c={sidebar_position:20,title:"sbv2 lease"},p=void 0,d={unversionedId:"cli/lease",id:"cli/lease",title:"sbv2 lease",description:"",source:"@site/api/cli/lease.mdx",sourceDirName:"cli",slug:"/cli/lease",permalink:"/api/cli/lease",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"sbv2 lease"},sidebar:"tutorialSidebar",previous:{title:"sbv2 aggregator",permalink:"/api/cli/aggregator"},next:{title:"sbv2 crank",permalink:"/api/cli/crank"}},v={},g=[],m={toc:g};function f(e){var t=e.components,a=(0,r.Z)(e,u);return(0,o.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s,{mdxType:"Sbv2Lease"}))}f.isMDXComponent=!0}}]);