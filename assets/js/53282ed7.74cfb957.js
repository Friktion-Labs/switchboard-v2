"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[540],{5318:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var r=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),l=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),h=a,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||i;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2187:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return m},default:function(){return g},frontMatter:function(){return c},metadata:function(){return u},toc:function(){return d}});var r=n(2685),a=n(1244),i=(n(7378),n(5318)),o=["components"],p={toc:[{value:"<code>sbv2 print PUBLICKEY</code>",id:"sbv2-print-publickey",level:2},{value:"<code>sbv2 print:aggregator AGGREGATORKEY</code>",id:"sbv2-printaggregator-aggregatorkey",level:2},{value:"<code>sbv2 print:aggregator:history AGGREGATORKEY</code>",id:"sbv2-printaggregatorhistory-aggregatorkey",level:2},{value:"<code>sbv2 print:aggregator:lease AGGREGATORKEY</code>",id:"sbv2-printaggregatorlease-aggregatorkey",level:2},{value:"<code>sbv2 print:aggregator:permission AGGREGATORKEY</code>",id:"sbv2-printaggregatorpermission-aggregatorkey",level:2},{value:"<code>sbv2 print:crank CRANKKEY</code>",id:"sbv2-printcrank-crankkey",level:2},{value:"<code>sbv2 print:job JOBKEY</code>",id:"sbv2-printjob-jobkey",level:2},{value:"<code>sbv2 print:job:templates</code>",id:"sbv2-printjobtemplates",level:2},{value:"<code>sbv2 print:json:samples OUTPUTDIRECTORY</code>",id:"sbv2-printjsonsamples-outputdirectory",level:2},{value:"<code>sbv2 print:oracle ORACLEKEY</code>",id:"sbv2-printoracle-oraclekey",level:2},{value:"<code>sbv2 print:oracle:permission ORACLEKEY</code>",id:"sbv2-printoraclepermission-oraclekey",level:2},{value:"<code>sbv2 print:program</code>",id:"sbv2-printprogram",level:2},{value:"<code>sbv2 print:queue QUEUEKEY</code>",id:"sbv2-printqueue-queuekey",level:2},{value:"<code>sbv2 print:vrf VRFKEY</code>",id:"sbv2-printvrf-vrfkey",level:2}]};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"find and print a switchboard account by public key for a given cluster"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-print-publickey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print PUBLICKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printaggregator-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:aggregator AGGREGATORKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printaggregatorhistory-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:aggregator:history AGGREGATORKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printaggregatorlease-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:aggregator:lease AGGREGATORKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printaggregatorpermission-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:aggregator:permission AGGREGATORKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printcrank-crankkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:crank CRANKKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printjob-jobkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:job JOBKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printjobtemplates"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:job:templates"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printjsonsamples-outputdirectory"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:json:samples OUTPUTDIRECTORY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printoracle-oraclekey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:oracle ORACLEKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printoraclepermission-oraclekey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:oracle:permission ORACLEKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printprogram"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:program"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printqueue-queuekey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:queue QUEUEKEY"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#sbv2-printvrf-vrfkey"},(0,i.kt)("inlineCode",{parentName:"a"},"sbv2 print:vrf VRFKEY")))),(0,i.kt)("h2",{id:"sbv2-print-publickey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print PUBLICKEY")),(0,i.kt)("p",null,"find a switchboard account by public key for a given cluster"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print PUBLICKEY\n\nARGUMENTS\n  PUBLICKEY  public key of a switchboard account to lookup\n\nOPTIONS\n  -h, --help     show CLI help\n  -v, --verbose  log everything\n\nEXAMPLE\n  $ sbv2 print GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/index.ts"},"src/commands/print/index.ts"))),(0,i.kt)("h2",{id:"sbv2-printaggregator-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:aggregator AGGREGATORKEY")),(0,i.kt)("p",null,"Print the deserialized Switchboard aggregator account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:aggregator AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --jobs                 output job definitions\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:print\n\nEXAMPLE\n  $ sbv2 aggregator:print GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/aggregator.ts"},"src/commands/print/aggregator.ts"))),(0,i.kt)("h2",{id:"sbv2-printaggregatorhistory-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:aggregator:history AGGREGATORKEY")),(0,i.kt)("p",null,"Print the history buffer associated with an aggregator account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:aggregator:history AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to fetch permission account and deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:history:print\n  $ sbv2 aggregator:print:history\n\nEXAMPLE\n  $ sbv2 aggregator:print:history 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/aggregator/history.ts"},"src/commands/print/aggregator/history.ts"))),(0,i.kt)("h2",{id:"sbv2-printaggregatorlease-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:aggregator:lease AGGREGATORKEY")),(0,i.kt)("p",null,"Print the lease account associated with a Switchboard aggregator account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:aggregator:lease AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to fetch permission account and deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:lease:print\n  $ sbv2 aggregator:print:lease\n\nEXAMPLE\n  $ sbv2 aggregator:lease:print 8SXvChNYFhRq4EZuZvnhjrB3jJRQCv4k3P4W6hesH3Ee\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/aggregator/lease.ts"},"src/commands/print/aggregator/lease.ts"))),(0,i.kt)("h2",{id:"sbv2-printaggregatorpermission-aggregatorkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:aggregator:permission AGGREGATORKEY")),(0,i.kt)("p",null,"Print the permission account associated with a Switchboard aggregator account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:aggregator:permission AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator account to fetch permission account and deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:permission:print\n  $ sbv2 aggregator:print:permission\n\nEXAMPLE\n  $ sbv2 aggregator:permission:print 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/aggregator/permission.ts"},"src/commands/print/aggregator/permission.ts"))),(0,i.kt)("h2",{id:"sbv2-printcrank-crankkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:crank CRANKKEY")),(0,i.kt)("p",null,"print deserialized switchboard crank account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:crank CRANKKEY\n\nARGUMENTS\n  CRANKKEY  public key of the crank account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 crank:print\n\nEXAMPLE\n  $ sbv2 crank:print 85L2cFUvXaeGQ4HrzP8RJEVCL7WvRrXM2msvEmQ82AVr\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/crank.ts"},"src/commands/print/crank.ts"))),(0,i.kt)("h2",{id:"sbv2-printjob-jobkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:job JOBKEY")),(0,i.kt)("p",null,"Print the deserialized Switchboard job account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:job JOBKEY\n\nARGUMENTS\n  JOBKEY  public key of the job account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 job:print\n\nEXAMPLE\n  $ sbv2 job:print SzTvFZLz3hwjZFMwVWzuEnr1oUF6qyvXwXCvsqf7qeA\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/job.ts"},"src/commands/print/job.ts"))),(0,i.kt)("h2",{id:"sbv2-printjobtemplates"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:job:templates")),(0,i.kt)("p",null,"list available templates to build a job from"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:job:templates\n\nALIASES\n  $ sbv2 job:print:templates\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/job/templates.ts"},"src/commands/print/job/templates.ts"))),(0,i.kt)("h2",{id:"sbv2-printjsonsamples-outputdirectory"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:json:samples OUTPUTDIRECTORY")),(0,i.kt)("p",null,"write sample definition files to a directory"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:json:samples OUTPUTDIRECTORY\n\nARGUMENTS\n  OUTPUTDIRECTORY  filesystem path to output sample definition files\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 json:samples\n  $ sbv2 write:json:samples\n\nEXAMPLES\n  $ sbv2 print:json:samples ~/switchboard_json_samples\n  $ sbv2 json:samples ~/switchboard_json_samples\n  $ sbv2 write:json:samples ~/switchboard_json_samples\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/json/samples.ts"},"src/commands/print/json/samples.ts"))),(0,i.kt)("h2",{id:"sbv2-printoracle-oraclekey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:oracle ORACLEKEY")),(0,i.kt)("p",null,"Print the deserialized Switchboard oracle account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:oracle ORACLEKEY\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 oracle:print\n\nEXAMPLE\n  $ sbv2 oracle:print 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/oracle.ts"},"src/commands/print/oracle.ts"))),(0,i.kt)("h2",{id:"sbv2-printoraclepermission-oraclekey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:oracle:permission ORACLEKEY")),(0,i.kt)("p",null,"Print the permission account associated with a Switchboard oracle account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:oracle:permission ORACLEKEY\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle account to fetch permission account and deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 oracle:permission:print\n  $ sbv2 oracle:print:permission\n\nEXAMPLE\n  $ sbv2 oracle:permission:print 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/oracle/permission.ts"},"src/commands/print/oracle/permission.ts"))),(0,i.kt)("h2",{id:"sbv2-printprogram"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:program")),(0,i.kt)("p",null,"print the deserialized switchboard program state account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:program\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 program:print\n\nEXAMPLE\n  $ sbv2 program:print\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/program.ts"},"src/commands/print/program.ts"))),(0,i.kt)("h2",{id:"sbv2-printqueue-queuekey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:queue QUEUEKEY")),(0,i.kt)("p",null,"Print the deserialized Switchboard oraclequeue account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:queue QUEUEKEY\n\nARGUMENTS\n  QUEUEKEY  public key of the oracle queue account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --oracles              output oracles that are heartbeating on the queue\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 queue:print\n\nEXAMPLE\n  $ sbv2 queue:print GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/queue.ts"},"src/commands/print/queue.ts"))),(0,i.kt)("h2",{id:"sbv2-printvrf-vrfkey"},(0,i.kt)("inlineCode",{parentName:"h2"},"sbv2 print:vrf VRFKEY")),(0,i.kt)("p",null,"Print the deserialized Switchboard VRF account"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 print:vrf VRFKEY\n\nARGUMENTS\n  VRFKEY  public key of the vrf account to deserialize\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 vrf:print\n\nEXAMPLE\n  $ sbv2 vrf:print SzTvFZLz3hwjZFMwVWzuEnr1oUF6qyvXwXCvsqf7qeA\n")),(0,i.kt)("p",null,(0,i.kt)("em",{parentName:"p"},"See code: ",(0,i.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/print/vrf.ts"},"src/commands/print/vrf.ts"))))}s.isMDXComponent=!0;var l=["components"],c={sidebar_position:5,title:"sbv2 print"},m=void 0,u={unversionedId:"cli/print",id:"cli/print",title:"sbv2 print",description:"",source:"@site/api/cli/print.mdx",sourceDirName:"cli",slug:"/cli/print",permalink:"/api/cli/print",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"sbv2 print"},sidebar:"tutorialSidebar",previous:{title:"Overview",permalink:"/api/cli"},next:{title:"sbv2 job",permalink:"/api/cli/job"}},h={},d=[],b={toc:d};function g(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},b,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)(s,{mdxType:"Sbv2Print"}))}g.isMDXComponent=!0}}]);