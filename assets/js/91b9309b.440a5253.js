"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7895],{5318:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=r,g=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5484:function(e,t,n){n.r(t),n.d(t,{assets:function(){return m},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return p},metadata:function(){return d},toc:function(){return g}});var a=n(2685),r=n(1244),o=(n(7378),n(5318)),i=["components"],l={toc:[{value:"<code>sbv2 lease:create AGGREGATORKEY</code>",id:"sbv2-leasecreate-aggregatorkey",level:2},{value:"<code>sbv2 lease:extend AGGREGATORKEY</code>",id:"sbv2-leaseextend-aggregatorkey",level:2},{value:"<code>sbv2 lease:withdraw AGGREGATORKEY</code>",id:"sbv2-leasewithdraw-aggregatorkey",level:2}]};function s(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"interact with a switchboard lease account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-leasecreate-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 lease:create AGGREGATORKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-leaseextend-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 lease:extend AGGREGATORKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-leasewithdraw-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 lease:withdraw AGGREGATORKEY")))),(0,o.kt)("h2",{id:"sbv2-leasecreate-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 lease:create AGGREGATORKEY")),(0,o.kt)("p",null,"fund and re-enable an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 lease:create AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --amount=amount        token amount to load into the lease escrow. If decimals provided, amount will be normalized to\n                         raw tokenAmount\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:lease:create\n\nEXAMPLE\n  $ sbv2 lease:create GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.5 --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/lease/create.ts"},"src/commands/lease/create.ts"))),(0,o.kt)("h2",{id:"sbv2-leaseextend-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 lease:extend AGGREGATORKEY")),(0,o.kt)("p",null,"fund and re-enable an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 lease:extend AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --amount=amount        (required) token amount to load into the lease escrow. If decimals provided, amount will be\n                         normalized to raw tokenAmount\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:lease:extend\n\nEXAMPLE\n  $ sbv2 aggregator:lease:extend GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair \n  ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/lease/extend.ts"},"src/commands/lease/extend.ts"))),(0,o.kt)("h2",{id:"sbv2-leasewithdraw-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 lease:withdraw AGGREGATORKEY")),(0,o.kt)("p",null,"withdraw funds from an aggregator lease"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 lease:withdraw AGGREGATORKEY\n\nARGUMENTS\n  AGGREGATORKEY  public key of the aggregator to extend a lease for\n\nOPTIONS\n  -a, --authority=authority          keypair delegated as the authority for managing the oracle account\n  -h, --help                         show CLI help\n\n  -k, --keypair=keypair              keypair that will pay for onchain transactions. defaults to new account authority\n                                     if no alternate authority provided\n\n  -s, --silent                       suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl                alternate RPC url\n\n  -v, --verbose                      log everything\n\n  --amount=amount                    (required) token amount to withdraw from lease account. If decimals provided,\n                                     amount will be normalized to raw tokenAmount\n\n  --mainnetBeta                      WARNING: use mainnet-beta solana cluster\n\n  --programId=programId              alternative Switchboard program ID to interact with\n\n  --withdrawAddress=withdrawAddress  tokenAccount to withdraw to. If not provided, payer associated token account will\n                                     be used\n\nALIASES\n  $ sbv2 aggregator:lease:withdraw\n\nEXAMPLE\n  $ sbv2 aggregator:lease:withdraw GvDMxPzN1sCj7L26YDK2HnMRXEQmQ2aemov8YBtPS7vR --amount 1.1 --keypair \n  ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/lease/withdraw.ts"},"src/commands/lease/withdraw.ts"))))}s.isMDXComponent=!0;var c=["components"],p={sidebar_position:20,title:"sbv2 lease"},u=void 0,d={unversionedId:"cli/lease",id:"cli/lease",title:"sbv2 lease",description:"",source:"@site/api/cli/lease.mdx",sourceDirName:"cli",slug:"/cli/lease",permalink:"/api/cli/lease",tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20,title:"sbv2 lease"},sidebar:"tutorialSidebar",previous:{title:"sbv2 aggregator",permalink:"/api/cli/aggregator"},next:{title:"sbv2 crank",permalink:"/api/cli/crank"}},m={},g=[],v={toc:g};function h(e){var t=e.components,n=(0,r.Z)(e,c);return(0,o.kt)("wrapper",(0,a.Z)({},v,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s,{mdxType:"Sbv2Lease"}))}h.isMDXComponent=!0}}]);