"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4821],{5318:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7378);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},k=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),k=p(t),m=a,d=k["".concat(l,".").concat(m)]||k[m]||u[m]||o;return t?r.createElement(d,i(i({ref:n},s),{},{components:t})):r.createElement(d,i({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=k;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}k.displayName="MDXCreateElement"},9863:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return u},default:function(){return h},frontMatter:function(){return s},metadata:function(){return k},toc:function(){return d}});var r=t(5773),a=t(808),o=(t(7378),t(5318)),i=["components"],c={toc:[{value:"<code>sbv2 crank:list CRANKKEY</code>",id:"sbv2-cranklist-crankkey",level:2},{value:"<code>sbv2 crank:push CRANKKEY AGGREGATORKEY</code>",id:"sbv2-crankpush-crankkey-aggregatorkey",level:2},{value:"<code>sbv2 crank:turn CRANKKEY</code>",id:"sbv2-crankturn-crankkey",level:2}]};function l(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"interact with a switchboard crank account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-cranklist-crankkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 crank:list CRANKKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-crankpush-crankkey-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 crank:push CRANKKEY AGGREGATORKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-crankturn-crankkey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 crank:turn CRANKKEY")))),(0,o.kt)("h2",{id:"sbv2-cranklist-crankkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 crank:list CRANKKEY")),(0,o.kt)("p",null,"list the pubkeys currently on the crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 crank:list CRANKKEY\n\nARGUMENTS\n  CRANKKEY  public key of the crank\n\nOPTIONS\n  -f, --outputFile=outputFile  output file to save aggregator pubkeys to\n  -h, --help                   show CLI help\n\n  -k, --keypair=keypair        keypair that will pay for onchain transactions. defaults to new account authority if no\n                               alternate authority provided\n\n  -s, --silent                 suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl          alternate RPC url\n\n  -v, --verbose                log everything\n\n  --force                      overwrite output file if exists\n\n  --mainnetBeta                WARNING: use mainnet-beta solana cluster\n\n  --programId=programId        alternative Switchboard program ID to interact with\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/crank/list.ts"},"src/commands/crank/list.ts"))),(0,o.kt)("h2",{id:"sbv2-crankpush-crankkey-aggregatorkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 crank:push CRANKKEY AGGREGATORKEY")),(0,o.kt)("p",null,"push an aggregator onto a crank"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 crank:push CRANKKEY AGGREGATORKEY\n\nARGUMENTS\n  CRANKKEY       public key of the crank\n  AGGREGATORKEY  public key of the aggregator\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nALIASES\n  $ sbv2 aggregator:add:crank\n  $ sbv2 crank:add:aggregator\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/crank/push.ts"},"src/commands/crank/push.ts"))),(0,o.kt)("h2",{id:"sbv2-crankturn-crankkey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 crank:turn CRANKKEY")),(0,o.kt)("p",null,"turn the crank and get rewarded if aggregator updates available"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 crank:turn CRANKKEY\n\nARGUMENTS\n  CRANKKEY  public key of the crank to turn\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nEXAMPLE\n  $ sbv2 crank:turn 85L2cFUvXaeGQ4HrzP8RJEVCL7WvRrXM2msvEmQ82AVr --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/crank/turn.ts"},"src/commands/crank/turn.ts"))))}l.isMDXComponent=!0;var p=["components"],s={sidebar_position:30,title:"sbv2 crank"},u=void 0,k={unversionedId:"cli/crank",id:"cli/crank",title:"sbv2 crank",description:"",source:"@site/api/cli/crank.mdx",sourceDirName:"cli",slug:"/cli/crank",permalink:"/api/cli/crank",tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30,title:"sbv2 crank"},sidebar:"tutorialSidebar",previous:{title:"sbv2 lease",permalink:"/api/cli/lease"},next:{title:"sbv2 oracle",permalink:"/api/cli/oracle"}},m={},d=[],b={toc:d};function h(e){var n=e.components,t=(0,a.Z)(e,p);return(0,o.kt)("wrapper",(0,r.Z)({},b,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)(l,{mdxType:"Sbv2Crank"}))}h.isMDXComponent=!0}}]);