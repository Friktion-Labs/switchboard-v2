"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9965],{5318:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return d}});var a=r(7378);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),s=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=s(r),d=n,h=m["".concat(l,".").concat(d)]||m[d]||u[d]||o;return r?a.createElement(h,i(i({ref:t},p),{},{components:r})):a.createElement(h,i({ref:t},p))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=m;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}m.displayName="MDXCreateElement"},928:function(e,t,r){r.r(t),r.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return b},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return h}});var a=r(5773),n=r(808),o=(r(7378),r(5318)),i=["components"],c={toc:[{value:"<code>sbv2 oracle:balance ORACLEKEY</code>",id:"sbv2-oraclebalance-oraclekey",level:2},{value:"<code>sbv2 oracle:create QUEUEKEY</code>",id:"sbv2-oraclecreate-queuekey",level:2},{value:"<code>sbv2 oracle:deposit ORACLEKEY</code>",id:"sbv2-oracledeposit-oraclekey",level:2},{value:"<code>sbv2 oracle:permission:create ORACLEKEY</code>",id:"sbv2-oraclepermissioncreate-oraclekey",level:2},{value:"<code>sbv2 oracle:withdraw ORACLEKEY</code>",id:"sbv2-oraclewithdraw-oraclekey",level:2}]};function l(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"interact with a switchboard oracle account"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-oraclebalance-oraclekey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 oracle:balance ORACLEKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-oraclecreate-queuekey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 oracle:create QUEUEKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-oracledeposit-oraclekey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 oracle:deposit ORACLEKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-oraclepermissioncreate-oraclekey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 oracle:permission:create ORACLEKEY"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#sbv2-oraclewithdraw-oraclekey"},(0,o.kt)("inlineCode",{parentName:"a"},"sbv2 oracle:withdraw ORACLEKEY")))),(0,o.kt)("h2",{id:"sbv2-oraclebalance-oraclekey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 oracle:balance ORACLEKEY")),(0,o.kt)("p",null,"check an oracles token balance"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 oracle:balance ORACLEKEY\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle to check token balance\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nEXAMPLE\n  $ sbv2 oracle:balance 9CmLriMhykZ8xAoNTSHjHbk6SkuMhie1NCZn9P6LCuZ4\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/oracle/balance.ts"},"src/commands/oracle/balance.ts"))),(0,o.kt)("h2",{id:"sbv2-oraclecreate-queuekey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 oracle:create QUEUEKEY")),(0,o.kt)("p",null,"create a new oracle account for a given queue"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 oracle:create QUEUEKEY\n\nARGUMENTS\n  QUEUEKEY  public key of the oracle queue to join\n\nOPTIONS\n  -a, --authority=authority  keypair to delegate authority to for managing the oracle account\n  -h, --help                 show CLI help\n\n  -k, --keypair=keypair      keypair that will pay for onchain transactions. defaults to new account authority if no\n                             alternate authority provided\n\n  -n, --name=name            name of the oracle for easier identification\n\n  -s, --silent               suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl        alternate RPC url\n\n  -v, --verbose              log everything\n\n  --mainnetBeta              WARNING: use mainnet-beta solana cluster\n\n  --programId=programId      alternative Switchboard program ID to interact with\n\nEXAMPLES\n  $ sbv2 oracle:create GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --keypair ../payer-and-authority-keypair.json\n  $ sbv2 oracle:create GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --name=oracle-1  --keypair \n  ../payer-and-authority-keypair.json\n  $ sbv2 oracle:create GhYg3R1V6DmJbwuc57qZeoYG6gUuvCotUF1zU3WCj98U --keypair ../payer-keypair.json --authority \n  ../oracle-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/oracle/create.ts"},"src/commands/oracle/create.ts"))),(0,o.kt)("h2",{id:"sbv2-oracledeposit-oraclekey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 oracle:deposit ORACLEKEY")),(0,o.kt)("p",null,"deposit tokens into an oracle's token wallet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 oracle:deposit ORACLEKEY\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle to deposit funds into\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --amount=amount        (required) token amount to load into the oracle escrow. If decimals provided, amount will be\n                         normalized to raw tokenAmount\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n\nEXAMPLE\n  $ sbv2 oracle:deposit 6kPsQoufdugtHLjM4fH7Z2fNv7jLt5pgvwKHt5JvRhQ6 2500 --keypair ../payer-keypair.json\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/oracle/deposit.ts"},"src/commands/oracle/deposit.ts"))),(0,o.kt)("h2",{id:"sbv2-oraclepermissioncreate-oraclekey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 oracle:permission:create ORACLEKEY")),(0,o.kt)("p",null,"create a permission account for an oracle"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 oracle:permission:create ORACLEKEY\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle account\n\nOPTIONS\n  -h, --help             show CLI help\n\n  -k, --keypair=keypair  keypair that will pay for onchain transactions. defaults to new account authority if no\n                         alternate authority provided\n\n  -s, --silent           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl    alternate RPC url\n\n  -v, --verbose          log everything\n\n  --mainnetBeta          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId  alternative Switchboard program ID to interact with\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/oracle/permission/create.ts"},"src/commands/oracle/permission/create.ts"))),(0,o.kt)("h2",{id:"sbv2-oraclewithdraw-oraclekey"},(0,o.kt)("inlineCode",{parentName:"h2"},"sbv2 oracle:withdraw ORACLEKEY")),(0,o.kt)("p",null,"withdraw tokens from an oracle's token wallet"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"USAGE\n  $ sbv2 oracle:withdraw ORACLEKEY\n\nARGUMENTS\n  ORACLEKEY  public key of the oracle to withdraw from\n\nOPTIONS\n  -a, --authority=authority              keypair delegated as the authority for managing the oracle account\n  -f, --force                            skip minStake balance check. your oracle may be removed from the queue\n  -h, --help                             show CLI help\n\n  -k, --keypair=keypair                  keypair that will pay for onchain transactions. defaults to new account\n                                         authority if no alternate authority provided\n\n  -s, --silent                           suppress cli prompts\n\n  -u, --rpcUrl=rpcUrl                    alternate RPC url\n\n  -v, --verbose                          log everything\n\n  -w, --withdrawAccount=withdrawAccount  optional solana pubkey or keypair filesystem path to withdraw funds to. default\n                                         destination is oracle authority's token wallet\n\n  --amount=amount                        (required) token amount to withdraw from oracle escrow. If decimals provided,\n                                         amount will be normalized to raw tokenAmount\n\n  --mainnetBeta                          WARNING: use mainnet-beta solana cluster\n\n  --programId=programId                  alternative Switchboard program ID to interact with\n\nEXAMPLES\n  $ sbv2 oracle:withdraw 6kPsQoufdugtHLjM4fH7Z2fNv7jLt5pgvwKHt5JvRhQ6 2500 --keypair ../oracle-keypair.json\n  $ sbv2 oracle:withdraw 6kPsQoufdugtHLjM4fH7Z2fNv7jLt5pgvwKHt5JvRhQ6 2500 --keypair ../payer-keypair.json --authority \n  ../oracle-keypair.json -w ByJs8E29jxvqf2KFLwfyiE2gUh5fivaS7aShcRMAsnzg\n")),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"See code: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/switchboard-xyz/switchboard-v2/tree/main/cli/src/commands/oracle/withdraw.ts"},"src/commands/oracle/withdraw.ts"))))}l.isMDXComponent=!0;var s=["components"],p={sidebar_position:40,title:"sbv2 oracle"},u=void 0,m={unversionedId:"cli/oracle",id:"cli/oracle",title:"sbv2 oracle",description:"",source:"@site/api/cli/oracle.mdx",sourceDirName:"cli",slug:"/cli/oracle",permalink:"/api/cli/oracle",tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40,title:"sbv2 oracle"},sidebar:"tutorialSidebar",previous:{title:"sbv2 crank",permalink:"/api/cli/crank"},next:{title:"sbv2 queue",permalink:"/api/cli/queue"}},d={},h=[],k={toc:h};function b(e){var t=e.components,r=(0,n.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},k,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(l,{mdxType:"Sbv2Oracle"}))}b.isMDXComponent=!0}}]);