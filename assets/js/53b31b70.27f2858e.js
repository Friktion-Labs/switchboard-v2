"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2753],{5310:function(e,t,a){a.d(t,{Z:function(){return h}});var n=a(5773),r=a(808),l=a(7378),i=a(8944),o=a(5642),u=a(1652),s=a(3772),c=a(6206),d=a(4246);const m=["className","component"];var p=a(4907);const k=function(e={}){const{defaultTheme:t,defaultClassName:a="MuiBox-root",generateClassName:p,styleFunctionSx:k=u.Z}=e,h=(0,o.ZP)("div")(k);return l.forwardRef((function(e,l){const o=(0,c.Z)(t),u=(0,s.Z)(e),{className:k,component:g="div"}=u,f=(0,r.Z)(u,m);return(0,d.jsx)(h,(0,n.Z)({as:g,ref:l,className:(0,i.Z)(k,p?p(a):a),theme:o},f))}))}({defaultTheme:(0,a(2905).Z)(),defaultClassName:"MuiBox-root",generateClassName:p.Z.generate});var h=k},9523:function(e,t,a){a.d(t,{Z:function(){return f}});var n=a(5773),r=a(808),l=a(7378),i=a(8944),o=a(3892),u=a(1640),s=a(2399),c=a(2709),d=a(765);function m(e){return(0,d.Z)("MuiSvgIcon",e)}(0,a(2897).Z)("MuiSvgIcon",["root","colorPrimary","colorSecondary","colorAction","colorError","colorDisabled","fontSizeInherit","fontSizeSmall","fontSizeMedium","fontSizeLarge"]);var p=a(4246);const k=["children","className","color","component","fontSize","htmlColor","inheritViewBox","titleAccess","viewBox"],h=(0,c.ZP)("svg",{name:"MuiSvgIcon",slot:"Root",overridesResolver:(e,t)=>{const{ownerState:a}=e;return[t.root,"inherit"!==a.color&&t[`color${(0,u.Z)(a.color)}`],t[`fontSize${(0,u.Z)(a.fontSize)}`]]}})((({theme:e,ownerState:t})=>{var a,n,r,l,i,o,u,s,c,d,m,p,k,h,g,f,N;return{userSelect:"none",width:"1em",height:"1em",display:"inline-block",fill:"currentColor",flexShrink:0,transition:null==(a=e.transitions)||null==(n=a.create)?void 0:n.call(a,"fill",{duration:null==(r=e.transitions)||null==(l=r.duration)?void 0:l.shorter}),fontSize:{inherit:"inherit",small:(null==(i=e.typography)||null==(o=i.pxToRem)?void 0:o.call(i,20))||"1.25rem",medium:(null==(u=e.typography)||null==(s=u.pxToRem)?void 0:s.call(u,24))||"1.5rem",large:(null==(c=e.typography)||null==(d=c.pxToRem)?void 0:d.call(c,35))||"2.1875"}[t.fontSize],color:null!=(m=null==(p=e.palette)||null==(k=p[t.color])?void 0:k.main)?m:{action:null==(h=e.palette)||null==(g=h.action)?void 0:g.active,disabled:null==(f=e.palette)||null==(N=f.action)?void 0:N.disabled,inherit:void 0}[t.color]}})),g=l.forwardRef((function(e,t){const a=(0,s.Z)({props:e,name:"MuiSvgIcon"}),{children:l,className:c,color:d="inherit",component:g="svg",fontSize:f="medium",htmlColor:N,inheritViewBox:b=!1,titleAccess:v,viewBox:y="0 0 24 24"}=a,w=(0,r.Z)(a,k),S=(0,n.Z)({},a,{color:d,component:g,fontSize:f,instanceFontSize:e.fontSize,inheritViewBox:b,viewBox:y}),q={};b||(q.viewBox=y);const x=(e=>{const{color:t,fontSize:a,classes:n}=e,r={root:["root","inherit"!==t&&`color${(0,u.Z)(t)}`,`fontSize${(0,u.Z)(a)}`]};return(0,o.Z)(r,m,n)})(S);return(0,p.jsxs)(h,(0,n.Z)({as:g,className:(0,i.Z)(x.root,c),ownerState:S,focusable:"false",color:N,"aria-hidden":!v||void 0,role:v?"img":void 0,ref:t},q,w,{children:[l,v?(0,p.jsx)("title",{children:v}):null]}))}));g.muiName="SvgIcon";var f=g},8826:function(e,t,a){a.d(t,{ZP:function(){return c}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=a(8128),o=(a(1510),a(2750)),u=["components"],s={toc:[]};function c(e){var t=e.components,a=(0,r.Z)(e,u);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("table",null,(0,l.kt)("thead",null,(0,l.kt)("tr",null,(0,l.kt)("th",null,"Instruction"),(0,l.kt)("th",null,"API Resource(s)"),(0,l.kt)("th",null,"Description"))),(0,l.kt)("tbody",null,(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"OracleQueueInit")),(0,l.kt)("td",null,(0,l.kt)("a",{className:"nowrap",href:"/api/ts/classes/OracleQueueAccount#create"},(0,l.kt)(i.WZi,{className:"devicons__nowrap",mdxType:"SiTypescript"})," Typescript"),(0,l.kt)("br",null),(0,l.kt)("a",{className:"nowrap",href:"/api/py/switchboardpy.html#OracleQueueInitParams"},(0,l.kt)(i.Cul,{className:"devicons__nowrap",mdxType:"SiPython"})," Python"),(0,l.kt)("br",null),(0,l.kt)("a",{className:"nowrap",href:"/api/cli/queue#sbv2-queuecreate"},(0,l.kt)(i.wdL,{className:"devicons__nowrap",mdxType:"SiPowershell"})," CLI")),(0,l.kt)("td",null,(0,l.kt)(o.Z,{mdxType:"Typography"},"Create a new OracleQueueAccount with a specified configuration"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"OracleQueueSetRewards")),(0,l.kt)("td",null,(0,l.kt)("a",{className:"nowrap",href:"/api/ts/classes/OracleQueueAccount#setrewards"},(0,l.kt)(i.WZi,{className:"devicons__nowrap",mdxType:"SiTypescript"})," Typescript")),(0,l.kt)("td",null,(0,l.kt)(o.Z,{mdxType:"Typography"},"Set the rewards for an oracle queue"))),(0,l.kt)("tr",null,(0,l.kt)("td",null,(0,l.kt)("b",null,"PermissionSet")),(0,l.kt)("td",null,(0,l.kt)("a",{className:"nowrap",href:"/api/ts/classes/PermissionAccount#set"},(0,l.kt)(i.WZi,{className:"devicons__nowrap",mdxType:"SiTypescript"})," Typescript"),(0,l.kt)("br",null),(0,l.kt)("a",{className:"nowrap",href:"/api/cli/queue#sbv2-queuepermitaggregator-aggregatorkey"},(0,l.kt)(i.wdL,{className:"devicons__nowrap",mdxType:"SiPowershell"})," CLI")),(0,l.kt)("td",null,(0,l.kt)(o.Z,{mdxType:"Typography"},"As the authority, set the permissions for a given PermissionAccount"))))))}c.isMDXComponent=!0},5888:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=["components"],o={},u=void 0,s={unversionedId:"accounts/OracleQueueAccountData",id:"accounts/OracleQueueAccountData",title:"OracleQueueAccountData",description:"Size 0.009723120 SOL",source:"@site/idl/accounts/OracleQueueAccountData.md",sourceDirName:"accounts",slug:"/accounts/OracleQueueAccountData",permalink:"/idl/accounts/OracleQueueAccountData",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OracleAccountData",permalink:"/idl/accounts/OracleAccountData"},next:{title:"OracleQueueBuffer",permalink:"/idl/accounts/OracleQueueBuffer"}},c={},d=[],m={toc:d};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("b",null,"Size: "),"1269 Bytes",(0,l.kt)("br",null),(0,l.kt)("b",null,"Rent Exemption: "),"0.009723120 SOL",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"u8","[32]"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the queue to store on-chain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metadata"),(0,l.kt)("td",{parentName:"tr",align:null},"u8","[64]"),(0,l.kt)("td",{parentName:"tr",align:null},"Metadata of the queue to store on-chain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"authority"),(0,l.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"The account delegated as the authority to for creating permissions targeted at the queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oracleTimeout"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"Time period we should remove an oracle after if no response.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Rewards to provide oracles and round openers on this queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"minStake"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"The minimum amount of stake oracles must present to remain on the queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"slashingEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether slashing is enabled on this queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"varianceToleranceMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/idl/types/SwitchboardDecimal"},"SwitchboardDecimal")),(0,l.kt)("td",{parentName:"tr",align:null},"The tolerated variance amount oracle results can have from the accepted round result before being slashed. slashBound = varianceToleranceMultiplier * stdDeviation Default: 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"feedProbationPeriod"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"After a feed lease is funded or re-funded, it must consecutively succeed N amount of times or its authorization to use the queue is auto-revoked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"currIdx"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"Current index of the oracle rotation.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"size"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"Current number of oracles on a queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"gcIdx"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"Garbage collection index.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consecutiveFeedFailureLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Consecutive failure limit for a feed before feed permission is revoked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consecutiveOracleFailureLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Consecutive failure limit for an oracle before oracle permission is revoked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unpermissionedFeedsEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Enabling this setting means data feeds do not need explicit permission to join the queue and request new values from its oracles.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unpermissionedVrfEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Enabling this setting means VRF accounts do not need explicit permission to join the queue and request new values from its oracles.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"curatorRewardCut"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/idl/types/SwitchboardDecimal"},"SwitchboardDecimal")),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"lockLeaseFunding"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"ebuf"),(0,l.kt)("td",{parentName:"tr",align:null},"u8","[1001]"),(0,l.kt)("td",{parentName:"tr",align:null},"Reserved.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"maxSize"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"Maximum number of oracles a queue can support.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"dataBuffer"),(0,l.kt)("td",{parentName:"tr",align:null},"publicKey"),(0,l.kt)("td",{parentName:"tr",align:null},"Pubkey of the on-chain account holding the queue data.")))))}p.isMDXComponent=!0},744:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return k}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=["components"],o={toc:[]};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},o,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"data"),(0,l.kt)("td",{parentName:"tr",align:null},"publicKey[]"),(0,l.kt)("td",{parentName:"tr",align:null},"Buffer account storing an array of oracle public keys.")))))}u.isMDXComponent=!0;var s=["components"],c={},d=void 0,m={unversionedId:"accounts/OracleQueueBuffer",id:"accounts/OracleQueueBuffer",title:"OracleQueueBuffer",description:"Serialized buffer account storing the list of oracle's for a queue.",source:"@site/idl/accounts/OracleQueueBuffer.md",sourceDirName:"accounts",slug:"/accounts/OracleQueueBuffer",permalink:"/idl/accounts/OracleQueueBuffer",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"OracleQueueAccountData",permalink:"/idl/accounts/OracleQueueAccountData"},next:{title:"PermissionAccountData",permalink:"/idl/accounts/PermissionAccountData"}},p={},k=[],h={toc:k};function g(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Serialized buffer account storing the list of oracle's for a queue."),(0,l.kt)("b",null,"Size: "),"8 Bytes + (32 Bytes \xd7 Num Oracles)",(0,l.kt)("br",null),(0,l.kt)("b",null,"Rent Exemption: ")," Dependent on number of oracles.",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 1,000 oracles:\xa0\xa0 0.223666560 SOL",(0,l.kt)("br",null),"\xa0\xa0\xa0\xa0\xa0\xa0\xa0\xa0 25,000 oracles: 5.568946560 SOL",(0,l.kt)("br",null),(0,l.kt)("br",null),(0,l.kt)(u,{mdxType:"QueueBuffer"}))}g.isMDXComponent=!0},6483:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=["components"],o={},u=void 0,s={unversionedId:"instructions/oracleQueueInit",id:"instructions/oracleQueueInit",title:"oracleQueueInit",description:"Create and initialize the OracleQueueAccount.",source:"@site/idl/instructions/oracleQueueInit.md",sourceDirName:"instructions",slug:"/instructions/oracleQueueInit",permalink:"/idl/instructions/oracleQueueInit",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"oracleInit",permalink:"/idl/instructions/oracleInit"},next:{title:"oracleQueueSetRewards",permalink:"/idl/instructions/oracleQueueSetRewards"}},c={},d=[{value:"Accounts",id:"accounts",level:2},{value:"Args",id:"args",level:2}],m={toc:d};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Create and initialize the OracleQueueAccount."),(0,l.kt)("h2",{id:"accounts"},"Accounts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"isMut"),(0,l.kt)("th",{parentName:"tr",align:null},"isSigner"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oracleQueue"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"authority"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"buffer"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"payer"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"systemProgram"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"args"},"Args"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"name"),(0,l.kt)("td",{parentName:"tr",align:null},"u8","[32]"),(0,l.kt)("td",{parentName:"tr",align:null},"Name of the queue to store on-chain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"metadata"),(0,l.kt)("td",{parentName:"tr",align:null},"u8","[64]"),(0,l.kt)("td",{parentName:"tr",align:null},"Metadata of the queue to store on-chain.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"reward"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Rewards to provide oracles and round openers on this queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"minStake"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"The minimum amount of stake oracles must present to remain on the queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"feedProbationPeriod"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"After a feed lease is funded or re-funded, it must consecutively succeed N amount of times or its authorization to use the queue is auto-revoked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"oracleTimeout"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"Time period we should remove an oracle after if no response.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"slashingEnabled"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Whether slashing is enabled on this queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"varianceToleranceMultiplier"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/idl/types/BorshDecimal"},"BorshDecimal")),(0,l.kt)("td",{parentName:"tr",align:null},"The tolerated variance amount oracle results can have from the accepted round result before being slashed. slashBound = varianceToleranceMultiplier * stdDeviation Default: 2")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consecutiveFeedFailureLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Consecutive failure limit for a feed before feed permission is revoked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"consecutiveOracleFailureLimit"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Consecutive failure limit for an oracle before oracle permission is revoked.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"queueSize"),(0,l.kt)("td",{parentName:"tr",align:null},"u32"),(0,l.kt)("td",{parentName:"tr",align:null},"The size of the queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unpermissionedFeeds"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Enabling this setting means data feeds do not need explicit permission to join the queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"unpermissionedVrf"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0},7088:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=["components"],o={},u=void 0,s={unversionedId:"instructions/oracleQueueSetRewards",id:"instructions/oracleQueueSetRewards",title:"oracleQueueSetRewards",description:"Set the rewards to provide oracles and round openers on this queue.",source:"@site/idl/instructions/oracleQueueSetRewards.md",sourceDirName:"instructions",slug:"/instructions/oracleQueueSetRewards",permalink:"/idl/instructions/oracleQueueSetRewards",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"oracleQueueInit",permalink:"/idl/instructions/oracleQueueInit"},next:{title:"oracleQueueVrfConfig",permalink:"/idl/instructions/oracleQueueVrfConfig"}},c={},d=[{value:"Accounts",id:"accounts",level:2},{value:"Args",id:"args",level:2}],m={toc:d};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Set the rewards to provide oracles and round openers on this queue."),(0,l.kt)("h2",{id:"accounts"},"Accounts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"isMut"),(0,l.kt)("th",{parentName:"tr",align:null},"isSigner"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"queue"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"authority"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"args"},"Args"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"rewards"),(0,l.kt)("td",{parentName:"tr",align:null},"u64"),(0,l.kt)("td",{parentName:"tr",align:null},"Rewards to provide oracles and round openers on this queue.")))))}p.isMDXComponent=!0},6002:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=["components"],o={},u=void 0,s={unversionedId:"instructions/permissionSet",id:"instructions/permissionSet",title:"permissionSet",description:"Sets the permission in the PermissionAccount",source:"@site/idl/instructions/permissionSet.md",sourceDirName:"instructions",slug:"/instructions/permissionSet",permalink:"/idl/instructions/permissionSet",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"permissionInit",permalink:"/idl/instructions/permissionInit"},next:{title:"programConfig",permalink:"/idl/instructions/programConfig"}},c={},d=[{value:"Accounts",id:"accounts",level:2},{value:"Args",id:"args",level:2}],m={toc:d};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Sets the permission in the PermissionAccount"),(0,l.kt)("h2",{id:"accounts"},"Accounts"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"isMut"),(0,l.kt)("th",{parentName:"tr",align:null},"isSigner"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permission"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"authority"),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null})))),(0,l.kt)("h2",{id:"args"},"Args"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Field"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"permission"),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/idl/types/SwitchboardPermission"},"SwitchboardPermission")),(0,l.kt)("td",{parentName:"tr",align:null},"The ",(0,l.kt)("a",{parentName:"td",href:"/idl/types/SwitchboardPermission"},"SwitchboardPermission")," enumeration to set.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"enable"),(0,l.kt)("td",{parentName:"tr",align:null},"bool"),(0,l.kt)("td",{parentName:"tr",align:null},"Specifies whether to enable or disable the permission.")))))}p.isMDXComponent=!0},1912:function(e,t,a){a.r(t),a.d(t,{assets:function(){return c},contentTitle:function(){return u},default:function(){return p},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return d}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=["components"],o={},u=void 0,s={unversionedId:"types/SwitchboardPermission",id:"types/SwitchboardPermission",title:"SwitchboardPermission",description:"| Name | Value | Description |",source:"@site/idl/types/SwitchboardPermission.md",sourceDirName:"types",slug:"/types/SwitchboardPermission",permalink:"/idl/types/SwitchboardPermission",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SwitchboardDecimal",permalink:"/idl/types/SwitchboardDecimal"},next:{title:"VrfBuilder",permalink:"/idl/types/VrfBuilder"}},c={},d=[],m={toc:d};function p(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Value"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PermitOracleHeartbeat"),(0,l.kt)("td",{parentName:"tr",align:null},"1"),(0,l.kt)("td",{parentName:"tr",align:null},"queue ",(0,l.kt)("inlineCode",{parentName:"td"},"authority")," has permitted an Oracle Account to heartbeat on it's queue and receive update requests. Oracles ",(0,l.kt)("em",{parentName:"td"},"always")," need permissions to join a queue.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PermitOracleQueueUsage"),(0,l.kt)("td",{parentName:"tr",align:null},"2"),(0,l.kt)("td",{parentName:"tr",align:null},"queue ",(0,l.kt)("inlineCode",{parentName:"td"},"authority")," has permitted an Aggregator Account to request updates from it's oracles or join an existing crank. ",(0,l.kt)("strong",{parentName:"td"},"Note:")," Not required if a queue has ",(0,l.kt)("inlineCode",{parentName:"td"},"unpermissionedFeedsEnabled"),".")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"PermitVrfRequests"),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"queue ",(0,l.kt)("inlineCode",{parentName:"td"},"authority")," has permitted a VRF Account to request randomness from it's oracles. ",(0,l.kt)("strong",{parentName:"td"},"Note:")," Not required if a queue has ",(0,l.kt)("inlineCode",{parentName:"td"},"unpermissionedVrfEnabled"),".")))))}p.isMDXComponent=!0},3160:function(e,t,a){a.d(t,{Z:function(){return s}});var n=a(5773),r=a(808),l=a(7378),i=a(1309),o=["toc","className","linkClassName","linkActiveClassName","minHeadingLevel","maxHeadingLevel"];function u(e){var t=e.toc,a=e.className,n=e.linkClassName,r=e.isChild;return t.length?l.createElement("ul",{className:r?void 0:a},t.map((function(e){return l.createElement("li",{key:e.id},l.createElement("a",{href:"#"+e.id,className:null!=n?n:void 0,dangerouslySetInnerHTML:{__html:e.value}}),l.createElement(u,{isChild:!0,toc:e.children,className:a,linkClassName:n}))}))):null}function s(e){var t=e.toc,a=e.className,s=void 0===a?"table-of-contents table-of-contents__left-border":a,c=e.linkClassName,d=void 0===c?"table-of-contents__link":c,m=e.linkActiveClassName,p=void 0===m?void 0:m,k=e.minHeadingLevel,h=e.maxHeadingLevel,g=(0,r.Z)(e,o),f=(0,i.LU)(),N=null!=k?k:f.tableOfContents.minHeadingLevel,b=null!=h?h:f.tableOfContents.maxHeadingLevel,v=(0,i.b9)({toc:t,minHeadingLevel:N,maxHeadingLevel:b}),y=(0,l.useMemo)((function(){if(d&&p)return{linkClassName:d,linkActiveClassName:p,minHeadingLevel:N,maxHeadingLevel:b}}),[d,p,N,b]);return(0,i.Si)(y),l.createElement(u,(0,n.Z)({toc:v,className:s,linkClassName:d},g))}},6003:function(e,t,a){var n=a(5310),r=a(1309),l=a(8948),i=a(7378);t.Z=function(e){var t=(0,r.If)().colorMode,a="inherit";e.lightBg&&"dark"!==t&&(a=e.lightBg),e.darkBg&&"dark"===t&&(a=e.darkBg);var o={};return e.sx&&(o=Object.assign({backgroundColor:a,m:"auto",display:"flex"},o,e.sx)),i.createElement(n.Z,{component:"img",sx:o,src:(0,l.Z)(e.img)})}},1510:function(e,t,a){a.d(t,{N:function(){return i}});var n=a(9523),r=a(5773),l=a(7378);function i(e){return l.createElement(n.Z,(0,r.Z)({},e,{viewBox:"0 0 251 283.9"}),l.createElement("linearGradient",{id:"SVGID_1_",gradientUnits:"userSpaceOnUse",x1:"125.5",y1:"52.0877",x2:"125.5",y2:"253.0878",gradientTransform:"matrix(1 0 0 -1 0 285.9755)"},l.createElement("stop",{offset:"0"}),l.createElement("stop",{offset:"1"})),l.createElement("path",{d:"M125.5,233.9c-43.1,0-78.1-35-78.1-78.1c0-41.9,70.7-115.9,73.7-119l3.7-3.9l3.8,3.8c3.1,3.1,75,77.1,75,119 C203.6,198.9,168.6,233.9,125.5,233.9L125.5,233.9z M124.9,48c-6.2,6.7-19.2,21.2-32.1,38.2c-22.9,30.2-35,54.2-35,69.5 c0,37.3,30.4,67.7,67.7,67.7s67.7-30.4,67.7-67.7c0-15.3-12.3-39.3-35.6-69.5C144.5,69.3,131.2,54.7,124.9,48z"}),l.createElement("linearGradient",{id:"SVGID_2_",gradientUnits:"userSpaceOnUse",x1:"125.6",y1:"27.0877",x2:"125.6",y2:"269.3627",gradientTransform:"matrix(1 0 0 -1 0 285.9755)"},l.createElement("stop",{offset:"0"}),l.createElement("stop",{offset:"1"})),l.createElement("path",{d:"M125.5,258.9c-56.9,0-103.1-46.3-103.1-103.1c0-55.6,77.6-133.2,80.9-136.4c2-2,5.4-2,7.4,0s2,5.4,0,7.4 c-0.8,0.8-77.8,77.8-77.8,129c0,51.1,41.6,92.7,92.7,92.7s92.7-41.6,92.7-92.7c0-21-13.6-50-39.4-84.1 c-19.8-26.1-39.7-45.9-39.9-46.1c-2.1-2-2.1-5.3,0-7.4c2-2.1,5.3-2.1,7.4,0c3.4,3.3,82.4,81.9,82.4,137.6 C228.6,212.6,182.4,258.9,125.5,258.9L125.5,258.9z"}),l.createElement("linearGradient",{id:"SVGID_3_",gradientUnits:"userSpaceOnUse",x1:"125.5",y1:"2.0877",x2:"125.5",y2:"285.9755",gradientTransform:"matrix(1 0 0 -1 0 285.9755)"},l.createElement("stop",{offset:"0"}),l.createElement("stop",{offset:"1"})),l.createElement("path",{d:"M125.5,283.9C56.3,283.9,0,227.6,0,158.4c0-28.6,14.4-63.8,42.7-104.5C63.6,23.9,84.1,2.5,85,1.6 c2-2.1,5.3-2.1,7.4-0.1s2.1,5.3,0.1,7.4C92.3,9.1,71.6,30.7,51.2,60c-26.7,38.3-40.8,72.3-40.8,98.4c0,63.4,51.6,115.1,115.1,115.1 s115.1-51.6,115.1-115.1c0-26.1-14.2-60.1-41.1-98.4C178.9,30.7,158,9.1,157.8,8.9c-2-2.1-2-5.4,0.1-7.4s5.4-2,7.4,0.1 c3.5,3.6,85.7,89,85.7,156.8C251,227.6,194.7,283.9,125.5,283.9z"}))}},2673:function(e,t,a){a.r(t),a.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return c},metadata:function(){return m},toc:function(){return k}});var n=a(5773),r=a(808),l=(a(7378),a(5318)),i=a(6003);a(1884),a(3160);var o=a(8826),u=a(5888),s=(a(744),a(6483),a(7088),a(6002),a(1912),["components"]),c={sidebar_position:2,slug:".",title:"Oracle Queue"},d=void 0,m={unversionedId:"architecture/oracle-queue",id:"architecture/oracle-queue",title:"Oracle Queue",description:"An oracle queue governs a realm of oracles, data feeds, and randomness accounts. An oracle queue, and most of the other Switchboard accounts, have an authority field which specifies which keypair is permitted to make account changes. The authority could be controlled by a DAO to make the queue governed by its network participants.",source:"@site/docs/architecture/oracle-queue.mdx",sourceDirName:"architecture",slug:"/architecture/",permalink:"/architecture/",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,slug:".",title:"Oracle Queue"},sidebar:"tutorialSidebar",previous:{title:"Program",permalink:"/program"},next:{title:"Permissions",permalink:"/architecture/permissions/"}},p={},k=[{value:"Functions",id:"functions",level:2},{value:"\ud83d\ude80Configuration",id:"configuration",level:3},{value:"maxSize",id:"maxsize",level:4},{value:"Crank Account(s)",id:"crank-accounts",level:4},{value:"\ud83d\ude80Permission",id:"permission",level:3},{value:"\ud83d\ude80Update Requests",id:"update-requests",level:3},{value:"\ud83d\ude80Oracle Incentives",id:"oracle-incentives",level:3},{value:"minStake",id:"minstake",level:4},{value:"Oracle Rewards",id:"oracle-rewards",level:4},{value:"Slashing",id:"slashing",level:4},{value:"Account Schema",id:"account-schema",level:2},{value:"\ud83d\udce6OracleQueueAccountData",id:"oraclequeueaccountdata",level:3},{value:"Developer Resources",id:"developer-resources",level:2}],h={toc:k};function g(e){var t=e.components,a=(0,r.Z)(e,s);return(0,l.kt)("wrapper",(0,n.Z)({},h,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)(i.Z,{img:"/img/L1_L2_Queue_Functional_Updates.png",mdxType:"MarkdownImage"}),(0,l.kt)("p",null,"An oracle queue governs a ",(0,l.kt)("em",{parentName:"p"},"realm")," of oracles, data feeds, and randomness accounts. An oracle queue, and most of the other Switchboard accounts, have an ",(0,l.kt)("inlineCode",{parentName:"p"},"authority")," field which specifies which keypair is permitted to make account changes. The ",(0,l.kt)("inlineCode",{parentName:"p"},"authority")," could be controlled by a DAO to make the queue governed by its network participants."),(0,l.kt)("p",null,"An oracle queue can be divided into the following domains:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/architecture/permissions"},(0,l.kt)("strong",{parentName:"a"},"Queue Permissions")),": Controls how an oracle queues resources get allocated."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/architecture/oracles"},(0,l.kt)("strong",{parentName:"a"},"Oracles")),": Maintains the list of active oracles and how they get allocated to update request."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/architecture/randomness"},(0,l.kt)("strong",{parentName:"a"},"Randomness")),": Allows developers to request a verifiable random value on-chain."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"/architecture/feeds"},(0,l.kt)("strong",{parentName:"a"},"Data Feeds")),": Allows developers to build data feeds and publish on-chain.")),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("p",null,"An oracle queue is responsible for the following functions:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#configuration"},(0,l.kt)("strong",{parentName:"a"},"Configuration")),": Dictates the queue's configuration such as it' ",(0,l.kt)("inlineCode",{parentName:"li"},"maxSize")," or the number of cranks attached"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#permission"},(0,l.kt)("strong",{parentName:"a"},"Permission")),": Dictates how new entities can join and use its resources"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#update-requests"},(0,l.kt)("strong",{parentName:"a"},"Update Requests")),": Controls how update requests get allocated to oracles, whether manual or via a crank"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#oracle-incentives"},(0,l.kt)("strong",{parentName:"a"},"Oracle Incentives")),": Sets the oracle rewards and slashing mechanisms, which influences queue security")),(0,l.kt)("h3",{id:"configuration"},"\ud83d\ude80Configuration"),(0,l.kt)("h4",{id:"maxsize"},"maxSize"),(0,l.kt)("p",null,"When creating a queue with the OracleQueueInit instruction, an ",(0,l.kt)("a",{parentName:"p",href:"#oraclequeuebuffer"},"OracleQueueBuffer")," account must be initialized with a size of 8 Bytes + (32 Bytes \xd7 ",(0,l.kt)("inlineCode",{parentName:"p"},"maxSize"),"), where ",(0,l.kt)("inlineCode",{parentName:"p"},"maxSize")," is the maximum number of oracles the queue can support. Once a buffer is full, oracles must be removed before new oracles can join the network."),(0,l.kt)("h4",{id:"crank-accounts"},"Crank Account(s)"),(0,l.kt)("p",null,"A queue ",(0,l.kt)("inlineCode",{parentName:"p"},"authority")," can choose to create one or many cranks, allowing an aggregator with sufficient permissions to join. The crank is a scheduling mechanism that tracks a collection of aggregators and their next available update time. The crank can be turned by anyone, and if successful, the crank turner will be rewarded for jump starting the system."),(0,l.kt)("p",null,"Aggregators on a crank are ordered by their next available update time with some level of jitter, providing a maximum update interval of 2 \xd7 an aggregator's ",(0,l.kt)("inlineCode",{parentName:"p"},"minUpdateDelaySeconds"),". This is to mitigate oracles being assigned to the same aggregator update request, making a feed vulnerable to a malicious oracle."),(0,l.kt)("h3",{id:"permission"},"\ud83d\ude80Permission"),(0,l.kt)("p",null,"See ",(0,l.kt)("a",{parentName:"p",href:"/architecture/permissions"},"/architecture/permissions")," for more information on how a queue manages access to its resources."),(0,l.kt)("h3",{id:"update-requests"},"\ud83d\ude80Update Requests"),(0,l.kt)("p",null,"The OracleQueueBuffer account stores a list of oracle public keys in a round robin fashion, using ",(0,l.kt)("inlineCode",{parentName:"p"},"currIdx")," to track its position upon subsequent openRound calls. Oracle positions are periodically swapped in the buffer account to mitigate oracles being assigned the same data feeds each update cycle."),(0,l.kt)("p",null,"An aggregator with sufficient queue permissions can manually request a new value by calling the openRound instruction. If the aggregator's configuration permits it, the next N oracles will be assigned to the data feed update request. A queue's primary function is to allocate oracles to data feed update requests and keep the round robin queue cycling. The queue will periodically swap oracle positions to mitigate oracles being assigned the same data feed update request each cycle."),(0,l.kt)("h3",{id:"oracle-incentives"},"\ud83d\ude80Oracle Incentives"),(0,l.kt)("p",null,"Switchboard is an open network allowing anyone to run an oracle but there are many reasons an oracle may be incentivized to game the system. For example, if we know a smart contract is using a particular feed to calculate a collateral ratio, an oracle could under-report the asset price and cause a liquidation or cause someone to not get the fair market rate for a trade. There\u2019s a myriad of reasons an oracle could try and cheat so careful consideration was given to incentivize honest oracle behavior."),(0,l.kt)("h4",{id:"minstake"},"minStake"),(0,l.kt)("p",null,"Oracles are required to provide the queue's ",(0,l.kt)("inlineCode",{parentName:"p"},"minStake")," to the oracle's tokenAccount, which acts as an insurance policy to entice oracle operators to report honest results. Each oracle queue can have different staking requirements to influence its security. If the staking requirement is set too low it could attract dishonest oracles, but if set too high oracles may find a better use of their capital elsewhere."),(0,l.kt)("h4",{id:"oracle-rewards"},"Oracle Rewards"),(0,l.kt)("p",null,"An oracle\u2019s reward for a given round is determined by the queue's ",(0,l.kt)("inlineCode",{parentName:"p"},"reward"),". Oracles are rewarded each time they submit a result and then reevaluated when an accepted result has been accepted. When a result has been accepted, the oracle rewards are redistributed to the oracles that responded within the acceptable range. The median result filters the outliers and means an attacker needs to control the majority of the assigned oracles in order to skew a result. This is why increasing the queue's ",(0,l.kt)("inlineCode",{parentName:"p"},"minStake")," requirements increases the security of the network because the attacker will need more up-front capital to fund the attack. Oracle\u2019s get assigned to data feeds in a round robin fashion with feeds scheduled at varying intervals and oracle batchSize's, so even if an attacker controls a large number of the queue's oracles, there is no guarantee their oracles will get assigned to the same feed."),(0,l.kt)("h4",{id:"slashing"},"Slashing"),(0,l.kt)("p",null,"Switchboard uses the median oracle response to determine the accepted result. When initializing a queue, the queue ",(0,l.kt)("inlineCode",{parentName:"p"},"authority")," specifies a ",(0,l.kt)("inlineCode",{parentName:"p"},"varianceToleranceMultiplier")," which determines the range oracle responses may differ. An oracle queue defaults to two standard deviations. If a queue has ",(0,l.kt)("inlineCode",{parentName:"p"},"slashingEnabled"),", any oracle who responded outside the acceptable range will be slashed and lose a portion of their staked capital. The slashing amount can be changed by the DAO to further incentivize honest oracle behavior."),(0,l.kt)("h2",{id:"account-schema"},"Account Schema"),(0,l.kt)("h3",{id:"oraclequeueaccountdata"},"\ud83d\udce6OracleQueueAccountData"),(0,l.kt)(u.default,{mdxType:"OracleQueueAccountData"}),(0,l.kt)("h2",{id:"developer-resources"},"Developer Resources"),(0,l.kt)(o.ZP,{mdxType:"QueueInstructions"}))}g.isMDXComponent=!0}}]);